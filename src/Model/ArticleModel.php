<?php

namespace App\Model;


use App\Entity\Article;
use PDO;

/**
 * Class ArticleController
 * @package blog\src\Model
 */
class ArticleModel extends AbstractModel
{
    protected string $tableName = 'article';

    protected string $className = Article::class;

    public function findAll(): array
    {
        return parent::findAll(); // TODO: Change the autogenerated stub
    }

    public function findOne($id): array
    {
        return parent::findOne($id); // TODO: Change the autogenerated stub
    }

    public function findFilteredArticles(?int $page, ?int $idCategory)
    {
        $bdd = $this->getBdd();
        $queryString = "select * from article";
        $params = [];
        if ($idCategory) {
            $queryString .= " where idCategory = :idCategory";
            $params['idCategory'] = $idCategory;
        }
        if ($page) {
            $queryString .= " order by createdAt desc limit :limit offset :offset";
            $params['limit'] = 5;
            $params['offset'] = ($page - 1) * 5;
        }
        $query = $bdd->prepare($queryString);
        foreach ($params as $key => $value) {
            $query->bindValue($key, $value, PDO::PARAM_INT);
        }
        $query->execute();
        $results = $query->fetchAll();
        foreach ($results as $key => $result) {
            $article = new Article(...$result);
            $results[$key] = $article;
        }

        return $results;
    }

}



